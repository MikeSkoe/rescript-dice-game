// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Floor from "../domain/floor.bs.js";
import * as State from "../domain/state.bs.js";
import * as React from "react";
import * as Elevator from "../domain/elevator.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";

import './app.css'
;

function classnames(_list, _acc) {
  while(true) {
    var acc = _acc;
    var list = _list;
    if (!list) {
      return acc;
    }
    var match = list.hd;
    if (match[1]) {
      _acc = acc + " " + match[0];
      _list = list.tl;
      continue ;
    }
    _list = list.tl;
    continue ;
  };
}

function App$FloorComp(Props) {
  var floor = Props.floor;
  var isTarget = Props.isTarget;
  var withElevator = Props.withElevator;
  var isRequested = Props.isRequested;
  var isOpen = Props.isOpen;
  var dispatch = Props.dispatch;
  return React.createElement("div", {
              className: classnames({
                    hd: [
                      "floor",
                      true
                    ],
                    tl: {
                      hd: [
                        "open",
                        isOpen
                      ],
                      tl: {
                        hd: [
                          "target",
                          isTarget
                        ],
                        tl: {
                          hd: [
                            "requested",
                            isRequested
                          ],
                          tl: {
                            hd: [
                              "with-elevator",
                              withElevator
                            ],
                            tl: /* [] */0
                          }
                        }
                      }
                    }
                  }, ""),
              onClick: (function (param) {
                  return Curry._1(dispatch, /* RequestFloor */{
                              _0: floor
                            });
                })
            }, Floor.toString(floor));
}

var FloorComp = {
  make: App$FloorComp
};

function App(Props) {
  var match = React.useReducer(State.reducer, State.empty);
  var dispatch = match[1];
  var state = match[0];
  React.useEffect((function () {
          var timer = setInterval((function (param) {
                  return Curry._1(dispatch, /* Tick */0);
                }), 500);
          return (function (param) {
                    clearInterval(timer);
                    
                  });
        }), []);
  return React.createElement("div", undefined, Belt_Array.reverse(Belt_Array.map(Belt_Array.mapWithIndex(Belt_Array.make(10, undefined), (function (index, param) {
                            return Floor.ofInt(index);
                          })), (function (floor) {
                        return React.createElement(App$FloorComp, {
                                    floor: floor,
                                    isTarget: Elevator.Get.isTargetFloor(state, floor),
                                    withElevator: Elevator.Get.isCurrentFloor(state, floor),
                                    isRequested: Elevator.Get.isRequested(state, floor),
                                    isOpen: Elevator.Get.isOpen(state, floor),
                                    dispatch: dispatch
                                  });
                      }))));
}

var List;

var $$Array;

var Int;

var make = App;

export {
  List ,
  $$Array ,
  Int ,
  classnames ,
  FloorComp ,
  make ,
  
}
/*  Not a pure module */
